{"version":3,"sources":["assets/logo.svg","components/nav/Nav.js","components/footer/Footer.js","assets/gymshark-mix.mp4","components/buttons/Button.js","components/hero-banner/HeroBanner.js","components/cards/CardItem.js","components/toggle/Toggle.js","components/featureBar/FeatureBar.js","components/modal/Modal.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Nav","className","src","Logo","alt","Footer","Button","children","href","HeroBanner","autoPlay","loop","muted","backgroundVideo","type","CardItem","genderToggle","name","femaleImage","maleImage","id","onViewExercise","onClick","Toggle","handleGenderSelection","value","checked","onChange","htmlFor","FeatureBar","Modal","showModal","exercise","onModalToggle","female","image","male","dangerouslySetInnerHTML","__html","App","useState","isLoading","setIsLoading","workouts","setWorkouts","errorMessage","setErrorMessage","setGenderToggle","setShowModal","selectedExercise","setSelectedExcercise","useEffect","a","fetch","response","json","payload","Array","isArray","exercises","console","log","message","fetchData","prev","e","target","length","map","filter","filteredExercise","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.65de7065.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.aee0b773.svg\";","import React from \"react\";\nimport \"./nav.css\";\nimport Logo from \"../../assets/logo.svg\";\n\nconst Nav = () => {\n  return (\n    <nav className=\"nav-container\">\n      <div className=\"nav-logo\">\n        <img src={Logo} alt=\"gymshark logo\"/>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport \"./footer.css\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer-container\">\n      <h3>Â© 2021 | Gymshark Limited | All Rights Reserved | Be a visionary</h3>\n    </footer>\n  )\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/gymshark-mix.be83959d.mp4\";","import React from \"react\";\nimport \"./button.css\";\n\nconst Button = ({ children }) => {\n  return (\n    <a className=\"button\" href=\"/#featured\">\n      {children}\n    </a>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"./hero.css\";\nimport backgroundVideo from \"../../assets/gymshark-mix.mp4\";\nimport Button from \"../buttons/Button\";\n\nconst HeroBanner = () => {\n  return (\n    <section className=\"hero-container\">\n      <video autoPlay loop muted className=\"hero-video\">\n        <source src={backgroundVideo} type=\"video/mp4\" />\n      </video>\n      <article className=\"hero-content\">\n        <h1>Unleash your inner shark</h1>\n        <h2>Workouts to elevate your fitness training</h2>\n        <Button>Get Started</Button>\n      </article>\n    </section>\n  );\n};\n\nexport default HeroBanner;\n","import React from \"react\";\nimport \"./card.css\";\n\nconst CardItem = ({ genderToggle, name, femaleImage, maleImage, id, onViewExercise }) => {\n\n  return (\n    <div className=\"card-item-wrapper\">\n      <img\n        src={genderToggle === \"womens\" ? femaleImage : maleImage}\n        alt={name}\n      />\n      <div className=\"card-item-content\">\n        <h3>{name}</h3>\n        <button type=\"button\" className=\"card-button\" id={id} onClick={onViewExercise}>View exercise</button>\n      </div>\n    </div>\n  );\n};\n\nexport default CardItem;\n","import React from \"react\";\nimport \"./toggle.css\";\n\nconst Toggle = ({ handleGenderSelection, genderToggle }) => {\n  return (\n      <div className=\"toggle-container\">\n        <input\n          type=\"radio\"\n          id=\"radio-one\"\n          value=\"mens\"\n          checked={genderToggle === \"mens\"}\n          onChange={handleGenderSelection}\n        />\n        <label htmlFor=\"radio-one\">Mens</label>\n        <input\n          type=\"radio\"\n          id=\"radio-two\"\n          value=\"womens\"\n          checked={genderToggle === \"womens\"}\n          onChange={handleGenderSelection}\n        />\n        <label htmlFor=\"radio-two\">Womens</label>\n      </div>\n  );\n};\n\nexport default Toggle;\n","import React from 'react'\nimport Toggle from  \"../toggle/Toggle\"\nimport './feature.css'\n\nconst FeatureBar = ({ handleGenderSelection, genderToggle}) => {\n  return (\n    <div className=\"feature-container\" id=\"featured\">\n      <h2>Personalise your experience</h2>\n      <Toggle handleGenderSelection={handleGenderSelection}/>\n      {/* <h3>{genderToggle}</h3> */}\n    </div>\n  )\n}\n\nexport default FeatureBar\n","import React from \"react\";\nimport \"./modal.css\";\n\nconst Modal = ({ showModal, exercise, onModalToggle, genderToggle }) => {\n  return (\n    <>\n      {showModal ? (\n        <section className=\"modal-background\">\n          <article className=\"modal-wrapper\">\n            <button type=\"button\" onClick={onModalToggle}>Close</button>\n            {genderToggle === \"womens\" ? (\n              <img src={exercise.female.image} alt={exercise.name} />\n            ) : (\n              <img src={exercise.male.image} alt={exercise.name} />\n            )}\n            <h3>{exercise.name}</h3>\n            <div\n              className=\"modal-text\"\n              dangerouslySetInnerHTML={{ __html: exercise[\"transcript\"] }}\n            ></div>\n          </article>\n        </section>\n      ) : null}\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/nav/Nav\";\nimport Footer from \"./components/footer/Footer\";\nimport HeroBanner from \"./components/hero-banner/HeroBanner\";\nimport CardItem from \"./components/cards/CardItem\";\nimport FeatureBar from \"./components/featureBar/FeatureBar\";\nimport Modal from \"./components/modal/Modal\";\n\nconst URL =\n  \"https://private-922d75-recruitmenttechnicaltest.apiary-mock.com/customexercises/\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [workouts, setWorkouts] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [genderToggle, setGenderToggle] = useState(\"womens\");\n  const [showModal, setShowModal] = useState(false);\n  const [selectedExercise, setSelectedExcercise] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(URL);\n        const payload = await response.json();\n        if (payload && Array.isArray(payload.exercises)) {\n          //setWorkouts(payload.exercises.slice(0, 12) || []); just displaying 12 results but will try to add pagination as ~250 results\n          setWorkouts(payload.exercises || []);\n          setIsLoading(false);\n        } else throw \"payload is empty or not an array\";\n      } catch (error) {\n        console.log(error.message);\n        setErrorMessage(\"Sorry there has been an error fetching your workouts.\");\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const handleGenderSelection = (e) => setGenderToggle(e.target.value);\n\n  const onModalToggle = () => setShowModal((prev) => !prev);\n\n  const onViewExercise = (e) => {\n    setSelectedExcercise(e.target.id);\n    setShowModal(true);\n  };\n\n  return (\n    <div>\n      <Nav />\n      <HeroBanner />\n      <FeatureBar\n        handleGenderSelection={handleGenderSelection}\n        genderToggle={genderToggle}\n      />\n      <main className=\"container\">\n        {isLoading ? (\n          <h2>Fecthing workouts...</h2>\n        ) : (\n          <>\n            {errorMessage && <h2>{errorMessage}</h2>}\n            {workouts.length > 0 ? (\n              <>\n                {workouts.map((exercise) => (\n                  <CardItem\n                    key={exercise.id}\n                    genderToggle={genderToggle}\n                    name={exercise.name}\n                    femaleImage={exercise.female.image}\n                    maleImage={exercise.male.image}\n                    id={exercise.id}\n                    onViewExercise={onViewExercise}\n                  />\n                ))}\n                {workouts\n                  .filter((exercise) => exercise.id === selectedExercise)\n                  .map((filteredExercise) => (\n                    <Modal\n                      key={filteredExercise.id}\n                      exercise={filteredExercise}\n                      showModal={showModal}\n                      onModalToggle={onModalToggle}\n                      genderToggle={genderToggle}\n                    />\n                  ))}\n              </>\n            ) : (\n              <h2>Sorry, no exercises to display</h2>\n            )}\n          </>\n        )}\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}